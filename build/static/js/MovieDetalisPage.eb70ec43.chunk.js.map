{"version":3,"sources":["services/api.js","components/MovieDetailsPage/MovieDetailsPage.module.css","components/MovieDetailsPage/MovieDetailsPage.js"],"names":["BASEURL","KEY","getTrading","Axios","get","getMovieDetails","id","getCast","getReviews","getMovieList","query","module","exports","Reviews","lazy","Cast","MovieDetailsPage","state","data","getDataMovieDetails","API","then","setState","catch","error","alert","goBackToHisroty","props","history","goBack","this","match","params","poster_path","type","onClick","src","alt","original_title","vote_average","overview","genres","map","item","key","name","className","Styles","list","to","replace","activeClassName","linkActive","link","fallback","path","component","Component"],"mappings":"uHAAA,+LAEMA,EAAU,+BACVC,EAAM,mCAICC,EAAa,WACxB,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,qBAJI,MAIJ,YAHI,MAGJ,oBAAyDC,KAGrDI,EAAkB,SAAAC,GAC7B,OAAOH,IAAMC,IAAN,UAAaJ,EAAb,kBAA8BM,EAA9B,oBAA4CL,KAGxCM,EAAU,SAAAD,GACrB,OAAOH,IAAMC,IAAN,UAAaJ,EAAb,kBAA8BM,EAA9B,4BAAoDL,KAGhDO,EAAa,SAAAF,GACxB,OAAOH,IAAMC,IAAN,UAAaJ,EAAb,kBAA8BM,EAA9B,4BAAoDL,KAGhDQ,EAAe,SAAAC,GAC1B,OAAOP,IAAMC,IAAN,UAAaJ,EAAb,iCAA6CC,EAA7C,kBAA0DS,M,mBCvBnEC,EAAOC,QAAU,CAAC,KAAO,+BAA+B,KAAO,+BAA+B,KAAO,+BAA+B,WAAa,uC,kLCK3IC,EAAUC,gBAAK,kBACnB,gCAEIC,EAAOD,gBAAK,kBAAM,gCAGHE,E,2MAYnBC,MAAQ,CAAEC,KAAM,I,EAQhBC,oBAAsB,SAAAb,GACpBc,IAAoBd,GACjBe,MAAK,gBAAGH,EAAH,EAAGA,KAAH,OAAc,EAAKI,SAAS,CAAEJ,YAEnCK,OAAM,SAAAC,GAAK,OAAIC,MAAMD,O,EAG1BE,gBAAkB,WACI,EAAKC,MAAjBC,QACAC,U,mFAfW,IAEXvB,EADUwB,KAAKH,MAAfI,MACaC,OAAb1B,GACRwB,KAAKX,oBAAoBb,K,+BAejB,IACAY,EAASY,KAAKb,MAAdC,KAEAZ,EADUwB,KAAKH,MAAfI,MACaC,OAAb1B,GACR,OACE,oCACGY,EAAKe,aACJ,6BACE,oCACE,6BACE,6BACE,4BAAQC,KAAK,SAASC,QAASL,KAAKJ,iBAApC,WAGA,yBAAKU,IAAG,UA/CP,mCA+CO,OAAkBlB,EAAKe,aAAeI,IAAI,MAEpD,6BACE,4BAAKnB,EAAKoB,gBACV,0CAAgBpB,EAAKqB,cACrB,wCACA,2BAAIrB,EAAKsB,UACT,sCACA,4BACGtB,EAAKuB,QACJvB,EAAKuB,OAAOC,KAAI,SAAAC,GAAI,OAClB,wBAAIC,IAAKD,EAAKrC,IAAKqC,EAAKE,YAKlC,iCACE,sDACA,wBAAIC,UAAWC,IAAOC,MACpB,wBAAIF,UAAWC,IAAOJ,MACpB,kBAAC,IAAD,CACEM,GAAE,kBAAa3C,EAAb,SACF4C,SAAO,EACPC,gBAAiBJ,IAAOK,WACxBN,UAAWC,IAAOM,MAJpB,SASF,wBAAIP,UAAWC,IAAOJ,MACpB,kBAAC,IAAD,CACEM,GAAE,kBAAa3C,EAAb,YACF4C,SAAO,EACPC,gBAAiBJ,IAAOK,WACxBN,UAAWC,IAAOM,MAJpB,aAUJ,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,wBAAwBC,UAAWzC,IAC/C,kBAAC,IAAD,CACEwC,KAAK,2BACLC,UAAW3C,c,GA3Fa4C","file":"static/js/MovieDetalisPage.eb70ec43.chunk.js","sourcesContent":["import Axios from 'axios';\n\nconst BASEURL = 'https://api.themoviedb.org/3';\nconst KEY = '27948a4ccec018117337a604d5ddcbec';\nconst type = 'all';\nconst time = 'day';\n\nexport const getTrading = () => {\n  return Axios.get(`${BASEURL}/trending/${type}/${time}?api_key=${KEY}`);\n};\n\nexport const getMovieDetails = id => {\n  return Axios.get(`${BASEURL}/movie/${id}?api_key=${KEY}`);\n};\n\nexport const getCast = id => {\n  return Axios.get(`${BASEURL}/movie/${id}/credits?api_key=${KEY}`);\n};\n\nexport const getReviews = id => {\n  return Axios.get(`${BASEURL}/movie/${id}/reviews?api_key=${KEY}`);\n};\n\nexport const getMovieList = query => {\n  return Axios.get(`${BASEURL}/search/movie?api_key=${KEY}&query=${query}`);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MovieDetailsPage_list__LeqB2\",\"item\":\"MovieDetailsPage_item__3J2sy\",\"link\":\"MovieDetailsPage_link__3-vva\",\"linkActive\":\"MovieDetailsPage_linkActive__1SkCH\"};","import React, { Component, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport * as API from '../../services/api';\nimport Styles from './MovieDetailsPage.module.css';\n\nconst Reviews = lazy(() =>\n  import('../Reviews/Reviews' /* webpackChunkName: \"Reviews\" */),\n);\nconst Cast = lazy(() => import('../Cast/Cast' /* webpackChunkName: \"Cast\" */));\n\nconst BASEIMGURL = 'https://image.tmdb.org/t/p/w500';\nexport default class MovieDetailsPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      goBack: PropTypes.func,\n    }).isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        id: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  state = { data: [] };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { id } = match.params;\n    this.getDataMovieDetails(id);\n  }\n\n  getDataMovieDetails = id => {\n    API.getMovieDetails(id)\n      .then(({ data }) => this.setState({ data }))\n      // eslint-disable-next-line no-alert\n      .catch(error => alert(error));\n  };\n\n  goBackToHisroty = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { data } = this.state;\n    const { match } = this.props;\n    const { id } = match.params;\n    return (\n      <>\n        {data.poster_path && (\n          <div>\n            <>\n              <div>\n                <div>\n                  <button type=\"button\" onClick={this.goBackToHisroty}>\n                    Go back\n                  </button>\n                  <img src={`${BASEIMGURL}${data.poster_path}`} alt=\"\" />\n                </div>\n                <div>\n                  <h2>{data.original_title}</h2>\n                  <p>User Score: {data.vote_average}</p>\n                  <h3>Overview</h3>\n                  <p>{data.overview}</p>\n                  <h3>Genres</h3>\n                  <ul>\n                    {data.genres &&\n                      data.genres.map(item => (\n                        <li key={item.id}>{item.name}</li>\n                      ))}\n                  </ul>\n                </div>\n              </div>\n              <section>\n                <h3>additional information</h3>\n                <ul className={Styles.list}>\n                  <li className={Styles.item}>\n                    <NavLink\n                      to={`/movies/${id}/cast`}\n                      replace\n                      activeClassName={Styles.linkActive}\n                      className={Styles.link}\n                    >\n                      Cast\n                    </NavLink>\n                  </li>\n                  <li className={Styles.item}>\n                    <NavLink\n                      to={`/movies/${id}/reviews`}\n                      replace\n                      activeClassName={Styles.linkActive}\n                      className={Styles.link}\n                    >\n                      Reviews\n                    </NavLink>\n                  </li>\n                </ul>\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Switch>\n                    <Route path=\"/movies/:movieId/cast\" component={Cast} />\n                    <Route\n                      path=\"/movies/:movieId/reviews\"\n                      component={Reviews}\n                    />\n                  </Switch>\n                </Suspense>\n              </section>\n            </>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}